name: continuous build

on: [push, pull_request]

jobs:
  unit_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        task: ["cmake_test", "sanitizer_test"]
        os: [macos-10.15, ubuntu-22.04]
        exclude:
          # excludes sanitizer_test on macOS
          - os: macos-10.15
            task: "sanitizer_test"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          environment-file: scripts/conda_env.yml
      - name: Display Conda env
        shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Install Dependencies
        run: |
          if [[ $(uname) != "Darwin" ]]; then
            sudo apt update
            sudo apt install doxygen libcurl4-openssl-dev gcc g++
          else
            brew install libomp doxygen gcc@11
          fi
      - name: Test
        shell: bash -l {0}
        run: |
          TASK=${{ matrix.task }} ./scripts/test_script.sh

  s390x_test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup multiarch/qemu-user-static
        run: |
          docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - name: ubuntu-core:s390x-focal
        uses: docker://multiarch/ubuntu-core:s390x-focal
        with:
          args: >
            bash -c
            "uname -a &&
            lscpu | grep Endian &&
            apt-get -y update &&
            apt-get -y install doxygen libcurl4-openssl-dev gcc g++ cmake &&
            TASK=s390x_test bash scripts/test_script.sh
            "
